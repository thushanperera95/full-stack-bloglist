{"version":3,"sources":["components/Blog.js","components/Blogs.js","components/LoginForm.js","components/LoginDetails.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","incrementBlogLikes","deleteBlog","loggedInUser","useState","show","setShow","buttonText","showDeleteButton","user","username","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","url","likes","name","window","confirm","id","background","Blogs","blogs","sort","a","b","map","LoginForm","handleLogin","setUsername","password","setPassword","onSubmit","event","preventDefault","type","value","onChange","target","LoginDetails","handleLogout","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","required","Notification","forwardRef","_","ref","setType","message","setMessage","displayErrorNotification","displayNotification","displayInfoNotification","setTimeout","useImperativeHandle","color","fontSize","borderStyle","borderRadius","padding","display","selectNotificationStyle","displayName","Togglable","props","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","buttonLabel","children","baseUrl","token","setToken","newToken","getAll","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","put","remove","console","log","delete","login","credentials","App","setBlogs","setUser","blogFormToggleRef","useRef","notificationRef","useEffect","blogService","loggedUserJSON","localStorage","getItem","JSON","parse","loginService","setItem","stringify","current","error","removeItem","newBlog","savedBlog","concat","blogToUpdate","updatedBlog","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a22fed83.chunk.js","sourcesContent":["import { React, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, incrementBlogLikes, deleteBlog, loggedInUser }) => {\r\n  const [show, setShow] = useState(false)\r\n  const buttonText = show ? 'Hide' : 'Show'\r\n\r\n  const showDeleteButton = blog.user && loggedInUser.username === blog.user.username\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const handleIncrementBlogLikes = () => {\r\n    incrementBlogLikes(blog)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm(`Remove blog ${blog.title} by ${blog.author}?`)) {\r\n      deleteBlog(blog.id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div className=\"blogOverview\">\r\n        {blog.title} {blog.author} <button onClick={() => setShow(!show)} >{buttonText}</button>\r\n      </div>\r\n      {show &&\r\n        <div className=\"blogDetails\">\r\n          {blog.url}<br />\r\n          likes {blog.likes} <button onClick={() => handleIncrementBlogLikes()}>like</button><br />\r\n          {blog.user && blog.user.name}\r\n          {showDeleteButton &&\r\n            <>\r\n              <br />\r\n              <button onClick={handleDelete} style={{ background: 'lightblue' }}>remove</button>\r\n            </>}\r\n        </div>\r\n      }\r\n    </div>\r\n  )}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  incrementBlogLikes: PropTypes.func.isRequired,\r\n  deleteBlog: PropTypes.func.isRequired,\r\n  loggedInUser: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\nimport Blog from './Blog'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blogs = ({ blogs, incrementBlogLikes, deleteBlog, loggedInUser }) => (\r\n  <>\r\n    {\r\n      blogs\r\n        .sort((a,b) => a.likes > b.likes ? -1 : 1)\r\n        .map((blog) =>\r\n          <Blog\r\n            key={blog.id}\r\n            blog={blog}\r\n            incrementBlogLikes={incrementBlogLikes}\r\n            deleteBlog={deleteBlog}\r\n            loggedInUser={loggedInUser} />\r\n        )\r\n    }\r\n  </>\r\n)\r\n\r\nBlogs.propTypes = {\r\n  blogs: PropTypes.array.isRequired,\r\n  incrementBlogLikes: PropTypes.func.isRequired,\r\n  deleteBlog: PropTypes.func.isRequired,\r\n  loggedInUser: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Blogs","import { React, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    handleLogin({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        username\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )}\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginDetails = ({ user, handleLogout }) => (\r\n  <p>\r\n    {user.name} logged in\r\n    <button onClick={handleLogout}>logout</button>\r\n  </p>\r\n)\r\n\r\nLoginDetails.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  handleLogout: PropTypes.func.isRequired\r\n}\r\n\r\nexport default LoginDetails","import { React, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setNewTitle] = useState('')\r\n  const [newAuthor, setNewAuthor] = useState('')\r\n  const [newUrl, setNewUrl] = useState('')\r\n\r\n  const handleCreateBlog = (event) => {\r\n    event.preventDefault()\r\n\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuthor,\r\n      url: newUrl\r\n    })\r\n\r\n    setNewTitle('')\r\n    setNewAuthor('')\r\n    setNewUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={handleCreateBlog}>\r\n        <div>\r\n        title:\r\n          <input\r\n            type=\"text\"\r\n            value={newTitle}\r\n            name=\"title\"\r\n            id=\"input-title\"\r\n            onChange={({ target }) => setNewTitle(target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n        author:\r\n          <input\r\n            type=\"text\"\r\n            value={newAuthor}\r\n            name=\"author\"\r\n            id=\"input-author\"\r\n            onChange={({ target }) => setNewAuthor(target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n        url:\r\n          <input\r\n            type=\"text\"\r\n            value={newUrl}\r\n            name=\"url\"\r\n            id=\"input-url\"\r\n            onChange={({ target }) => setNewUrl(target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  createBlog: PropTypes.func.isRequired\r\n}\r\n\r\nexport default BlogForm","import { React, useState, forwardRef, useImperativeHandle } from 'react'\r\n\r\nconst Notification = forwardRef((_,ref) => {\r\n  const [type, setType] = useState('')\r\n  const [message, setMessage] = useState('')\r\n\r\n  const displayErrorNotification = (message) => {\r\n    setType('error')\r\n    displayNotification(message)\r\n  }\r\n\r\n  const displayInfoNotification = (message) => {\r\n    setType('info')\r\n    displayNotification(message)\r\n  }\r\n\r\n  const displayNotification = (message) => {\r\n    setMessage(message)\r\n\r\n    setTimeout(() => {\r\n      setType('')\r\n      setMessage('')\r\n    }, 5000)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      displayErrorNotification,\r\n      displayInfoNotification\r\n    }\r\n  })\r\n\r\n  const selectNotificationStyle = () => {\r\n    switch (type) {\r\n    case 'error':\r\n      return {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '20px'\r\n      }\r\n    case 'info':\r\n      return {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: '20px',\r\n        borderStyle: 'solid',\r\n        borderRadius: '5px',\r\n        padding: '10px',\r\n        marginBottom: '20px'\r\n      }\r\n    default:\r\n      return {\r\n        display: 'none'\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return <div className=\"notification\" style={selectNotificationStyle()}>{message}</div>\r\n})\r\n\r\nNotification.displayName = 'Notification'\r\n\r\nexport default Notification\r\n","import { useState, React, forwardRef, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  console.log(token)\r\n  await axios.delete(`${baseUrl}/${id}`, {\r\n    headers: {\r\n      Authorization: token\r\n    },\r\n    data: {\r\n      id: id\r\n    }\r\n  })\r\n}\r\n\r\nexport default { setToken, getAll, create, update, remove }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport Blogs from './components/Blogs'\r\nimport LoginForm from './components/LoginForm'\r\nimport LoginDetails from './components/LoginDetails'\r\nimport BlogForm from './components/BlogForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\n\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nfunction App() {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n\r\n  const blogFormToggleRef = useRef()\r\n  const notificationRef = useRef()\r\n\r\n  useEffect(async () => {\r\n    const blogs = await blogService.getAll()\r\n    setBlogs(blogs)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (credentials) => {\r\n    try {\r\n      const user = await loginService.login(credentials)\r\n\r\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\r\n\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n\r\n    } catch (exception) {\r\n      notificationRef.current.displayErrorNotification(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n\r\n    setUser(null)\r\n\r\n    notificationRef.current.displayInfoNotification('you have logged out')\r\n  }\r\n\r\n  const createBlog = async (newBlog) => {\r\n    try {\r\n      const savedBlog = await blogService.create(newBlog)\r\n      setBlogs(blogs.concat(savedBlog))\r\n\r\n      blogFormToggleRef.current.toggleVisibility()\r\n      notificationRef.current.displayInfoNotification(`a new blog ${savedBlog.title} by ${savedBlog.author} added`)\r\n\r\n    } catch (exception) {\r\n      notificationRef.current.displayErrorNotification(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  const incrementBlogLikes = async (blogToUpdate) => {\r\n    try {\r\n      blogToUpdate.likes += 1\r\n\r\n      const updatedBlog = await blogService.update(blogToUpdate.id, blogToUpdate)\r\n      setBlogs(blogs.map(blog => updatedBlog.id !== blog.id ? blog : updatedBlog))\r\n\r\n    } catch (exception) {\r\n      notificationRef.current.displayErrorNotification(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  const deleteBlog = async (id) => {\r\n    try {\r\n      await blogService.remove(id)\r\n      setBlogs(blogs.filter(blog => blog.id !== id))\r\n    } catch (exception) {\r\n      notificationRef.current.displayErrorNotification(exception.response.data.error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification ref={notificationRef} />\r\n      {user === null &&\r\n        <LoginForm handleLogin={handleLogin} />\r\n      }\r\n      {user !== null &&\r\n        <>\r\n          <LoginDetails\r\n            user={user}\r\n            handleLogout={() => handleLogout()}\r\n          />\r\n          <Togglable buttonLabel=\"new note\" ref={blogFormToggleRef}>\r\n            <BlogForm createBlog={createBlog} />\r\n          </Togglable>\r\n          <Blogs\r\n            blogs={blogs}\r\n            incrementBlogLikes={incrementBlogLikes}\r\n            deleteBlog={deleteBlog}\r\n            loggedInUser={user}\r\n          />\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}